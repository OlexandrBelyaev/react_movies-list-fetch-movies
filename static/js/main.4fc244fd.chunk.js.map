{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","useState","searchText","searchingText","foundFilm","setFoundFilm","findingError","setError","searchFilm","a","fetch","json","result","film","Response","Title","Poster","imdbID","Plot","htmlFor","type","id","placeholder","onChange","e","target","value","onClick","find","method","headers","body","JSON","stringify","then","response","App","state","data","this","Component","ReactDOM","render","document","getElementById"],"mappings":"iyEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,6CCL3BG,EAAY,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACtBC,EADsB,KACVC,EADU,OAEKF,mBAASN,EAAO,IAFrB,mBAEtBS,EAFsB,KAEXC,EAFW,OAGIJ,oBAAS,GAHb,mBAGtBK,EAHsB,KAGRC,EAHQ,KASvBC,EAAU,uCAAG,8BAAAC,EAAA,sEAETC,MAAM,6CAAD,OAA8CR,IAF1C,8BAGfS,OAHe,OACXC,EADW,OAIXC,EAAO,GAEW,SAApBD,EAAOE,UACTD,EAAK3B,MAAQ0B,EAAOG,MACpBF,EAAKzB,OAASwB,EAAOI,OACrBH,EAAKd,OAASa,EAAOK,OACrBJ,EAAK1B,YAAcyB,EAAOM,KAC1BL,EAAKxB,QAAL,iCAAyCuB,EAAOK,QAChDZ,EAAaQ,IAEbN,GAAS,GAdM,2CAAH,qDA8BhB,OACE,oCACE,0BAAMjB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ6B,QAAQ,eAAjC,eAIA,yBAAK7B,UAAU,WACb,2BACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZhC,UAAWgB,EAAe,kBAAoB,QAC9CiB,SAjDU,SAACC,GACrBrB,EAAcqB,EAAEC,OAAOC,OACvBnB,GAAS,OAkDFD,GACD,uBAAGhB,UAAU,kBAAb,yCAOF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE8B,KAAK,SACL9B,UAAU,kBACVqC,QAASnB,GAHX,iBASF,yBAAKlB,UAAU,WACb,4BACE8B,KAAK,SACL9B,UAAU,oBACVqC,QApDU,WAChBhC,EAAOiC,MAAK,SAAA/B,GAAK,OAAIA,EAAMX,QAAUkB,EAAUlB,UACjDwB,MAAM,mBAAoB,CACxBmB,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAU7B,KACpB8B,MAAK,SAAAC,GAAQ,OAAIA,EAASxB,YAyCvB,sBAWN,yBAAKrB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcc,MCzFVgC,EAAb,4MACEC,MAAQ,CACN1C,OAAQ2C,GAFZ,4CAKE,WAAU,IACA3C,EAAW4C,KAAKF,MAAhB1C,OAER,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,YAdV,GAAyBkD,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4fc244fd.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\n\nexport const FindMovie = () => {\n  const [searchText, searchingText] = useState('');\n  const [foundFilm, setFoundFilm] = useState(movies[0]);\n  const [findingError, setError] = useState(false);\n  const setSearchText = (e) => {\n    searchingText(e.target.value);\n    setError(false);\n  };\n\n  const searchFilm = async() => {\n    const result = await (\n      await fetch(`http://www.omdbapi.com/?apikey=b3f82314&t=${searchText}`)\n    ).json();\n    const film = {};\n\n    if (result.Response === 'True') {\n      film.title = result.Title;\n      film.imgUrl = result.Poster;\n      film.imdbId = result.imdbID;\n      film.description = result.Plot;\n      film.imdbUrl = `https://imdb.com/title/${result.imdbID}`;\n      setFoundFilm(film);\n    } else {\n      setError(true);\n    }\n  };\n\n  const addFilmToList = () => {\n    if (movies.find(movie => movie.title === foundFilm.title)) {\n      fetch('../../api/movies', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify(foundFilm),\n      }).then(response => response.json());\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={findingError ? 'input is-danger' : 'input'}\n              onChange={setSearchText}\n            />\n          </div>\n          {findingError && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addFilmToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...foundFilm} />\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}